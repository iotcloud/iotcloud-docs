Introduction
============

Since the standardization of the TCP/IP protocol suite over thirty years ago, the Internet has grown steadily from a collection of small research networks to a ubiquitous worldwide network of interconnected networks that serviced nearly two billion unique users in 2009 [8].  Now with the widespread availability of wireless Internet connectivity combined with the low cost of miniature electronic devices it possible to imagine the Internet expanded to include objects, embedded with sensors, communicating over the Internet in in vast numbers [9].  These smart objects are ordinary physical things which are augmented by a small computer that includes a sensor or actuator and a communication device [3].  A smart object is thus an embedded system, consisting of a thing (the physical entity) and a component (the computer) that processes the sensor data and supports a, usually, wireless communication link to the Internet [2].
Smart objects can be battery-operated, but not always, and typically have three components: a CPU (8-, 16- or 32-bit micro-controller), memory (a few tens of kilobytes) and a low-power wireless communication device (from a few kilobits/s to a few hundreds of kilobits/s). The size is small and the price is low: a few square mm and few dollars [10].

The technical issues involved with the IoT vision are not related to the functional capabilities of smart objects – there many such embedded systems are connected to the Internet today – but in the potentially massive numbers of smart objects to be contended with. Examples of these issues include: the deployment, discovery, management and interoperability of a many types (varieties) of smart objects deployed in large quantities.  Therefore, there is a need for scalable systems which enable the exploration of these and the other related technical issues associated with creating IoT applications.  To this end we have developed a sensor-centric framework called the IoTCloud which supports an extensible set of sensor-types and large numbers of, possibly, geographically distributed smart objects.  The primary purpose of this paper is to introduce the IoTCloud and encourage you to try it.  We will also discuss the suitability of distributed clouds for hosting our middleware and present an initial measurement of system performance in the context of a simulated real-time video chat application.

In our project we mainly focus on bringing the data produced by the divices in to a cloud environment and process them in a timely fasion using cloud technologies.
